@article{scikit-learn,
 title={Scikit-learn: Machine Learning in {P}ython},
 author={Pedregosa, F. and Varoquaux, G. and Gramfort, A. and Michel, V.
         and Thirion, B. and Grisel, O. and Blondel, M. and Prettenhofer, P.
         and Weiss, R. and Dubourg, V. and Vanderplas, J. and Passos, A. and
         Cournapeau, D. and Brucher, M. and Perrot, M. and Duchesnay, E.},
 journal={Journal of Machine Learning Research},
 volume={12},
 pages={2825--2830},
 year={2011}
}

@article{Hall2009,
  doi = {10.1145/1656274.1656278},
  url = {http://dx.doi.org/10.1145/1656274.1656278},
  year  = {2009},
  month = {nov},
  publisher = {Association for Computing Machinery ({ACM})},
  volume = {11},
  number = {1},
  pages = {10},
  author = {Mark Hall and Eibe Frank and Geoffrey Holmes and Bernhard Pfahringer and Peter Reutemann and Ian H. Witten},
  title = {The {WEKA} data mining software},
  journal = {{SIGKDD} Explor. Newsl.}
}

@article{Sakar2013,
  doi = {10.1109/jbhi.2013.2245674},
  url = {http://dx.doi.org/10.1109/JBHI.2013.2245674},
  year  = {2013},
  month = {jul},
  publisher = {Institute of Electrical {\&} Electronics Engineers ({IEEE})},
  volume = {17},
  number = {4},
  pages = {828--834},
  author = {B. E. Sakar and M.E. Isenkul and C. O. Sakar and A. Sertbas and F. Gurgen and S. Delil and H. Apaydin and O. Kursun},
  title = {Collection and Analysis of a Parkinson Speech Dataset With Multiple Types of Sound Recordings},
  journal = {{IEEE} Journal of Biomedical and Health Informatics}
}

@article{Tsanas2010,
  doi = {10.1109/tbme.2009.2036000},
  url = {http://dx.doi.org/10.1109/TBME.2009.2036000},
  year  = {2010},
  month = {apr},
  publisher = {Institute of Electrical {\&} Electronics Engineers ({IEEE})},
  volume = {57},
  number = {4},
  pages = {884--893},
  author = {A. Tsanas and M.A. Little and P.E. McSharry and L.O. Ramig},
  title = {Accurate Telemonitoring of Parkinson's Disease Progression by Noninvasive Speech Tests},
  journal = {{IEEE} Transactions on Biomedical Engineering}
}

@Misc{scipy,
  author =    {Eric Jones and Travis Oliphant and Pearu Peterson and others},
  title =     {{SciPy}: Open source scientific tools for {Python}},
  year =      {2001--},
  url = "http://www.scipy.org/",
  note = {[Online; accessed 2015-09-15]}
}

@INPROCEEDINGS{bergstra+al:2010-scipy,
     author = {Bergstra, James and Breuleux, Olivier and Bastien, Fr{\'{e}}d{\'{e}}ric and Lamblin, Pascal and Pascanu, Razvan and Desjardins, Guillaume and Turian, Joseph and Warde-Farley, David and Bengio, Yoshua},
      month = jun,
      title = {Theano: a {CPU} and {GPU} Math Expression Compiler},
  booktitle = {Proceedings of the Python for Scientific Computing Conference ({SciPy})},
       year = {2010},
   location = {Austin, TX},
       note = {Oral Presentation},
   abstract = {Theano is a compiler for mathematical expressions in Python that combines the convenience of NumPy’s syntax with the speed of optimized native machine language. The user composes mathematical expressions in a high-level description that mimics NumPy’s syntax and semantics, while being statically typed and
functional (as opposed to imperative). These expressions allow Theano to provide symbolic differentiation. Before performing computation, Theano optimizes the choice of expressions, translates
them into C++ (or CUDA for GPU), compiles them into dynamically loaded Python modules, all automatically. Common machine learning algorithms implemented with Theano are from 1.6× to 7.5× faster than competitive alternatives (including those implemented with C/C++, NumPy/SciPy and MATLAB) when compiled for the
CPU and between 6.5× and 44× faster when compiled for the GPU. This paper illustrates how to use Theano, outlines the scope of the compiler, provides benchmarks on both CPU and GPU processors, and explains its overall design.}
}
